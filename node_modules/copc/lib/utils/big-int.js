"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBigUint64 = exports.parseBigInt = void 0;
function parseBigInt(v) {
    if (v > BigInt(Number.MAX_SAFE_INTEGER) ||
        v < BigInt(-Number.MAX_SAFE_INTEGER)) {
        throw new Error(`Cannot convert bigint to number: ${v}`);
    }
    return Number(v);
}
exports.parseBigInt = parseBigInt;
// Safari is non-conforming here and doesn't have the BigUint functions on their
// DataView :\
function getBigUint64(dv, byteOffset, littleEndian) {
    if (dv.getBigUint64)
        return dv.getBigUint64(byteOffset, littleEndian);
    const [h, l] = littleEndian ? [4, 0] : [0, 4];
    const wh = BigInt(dv.getUint32(byteOffset + h, littleEndian));
    const wl = BigInt(dv.getUint32(byteOffset + l, littleEndian));
    return (wh << BigInt(32)) + wl;
}
exports.getBigUint64 = getBigUint64;
