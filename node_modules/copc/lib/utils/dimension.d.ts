export declare namespace Dimension {
    type Integral = {
        type: 'signed' | 'unsigned';
        size: 1 | 2 | 4 | 8;
    };
    type Float = {
        type: 'float';
        size: 4 | 8;
    };
}
export declare type Dimension = Dimension.Integral | Dimension.Float;
export declare namespace Dimension {
    type Map = Record<string, Dimension | undefined>;
    type Type = Dimension['type'];
    type Size = Dimension['size'];
}
export declare const Dimension: {
    Type: Record<string, Dimension>;
    ctype: typeof ctype;
};
declare function ctype({ type, size }: Dimension): string;
export {};
//# sourceMappingURL=dimension.d.ts.map