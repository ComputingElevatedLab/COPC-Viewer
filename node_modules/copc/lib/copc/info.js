"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Info = void 0;
const utils_1 = require("../utils");
const constants_1 = require("./constants");
exports.Info = { parse };
function parse(buffer) {
    const dv = utils_1.Binary.toDataView(buffer);
    if (dv.byteLength !== constants_1.infoLength) {
        throw new Error(`Invalid COPC info VLR length (should be ${constants_1.infoLength}): ${dv.byteLength}`);
    }
    const center = [
        dv.getFloat64(0, true),
        dv.getFloat64(8, true),
        dv.getFloat64(16, true),
    ];
    const radius = dv.getFloat64(24, true);
    return {
        cube: [
            center[0] - radius,
            center[1] - radius,
            center[2] - radius,
            center[0] + radius,
            center[1] + radius,
            center[2] + radius,
        ],
        spacing: dv.getFloat64(32, true),
        rootHierarchyPage: {
            pageOffset: (0, utils_1.parseBigInt)((0, utils_1.getBigUint64)(dv, 40, true)),
            pageLength: (0, utils_1.parseBigInt)((0, utils_1.getBigUint64)(dv, 48, true)),
        },
        gpsTimeRange: [dv.getFloat64(56, true), dv.getFloat64(64, true)],
    };
}
